#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Stack {
    private:
        int size;
        int *stack;
        int top;
    public:
        Stack(int size) {
            this->size = size;
            stack = new int[size];
            top = -1;
        }
        void push(int item) {
            if (top == size - 1) {
                cout << "overflow" << endl;
                return;
            }
            top++;
            stack[top] = item;
        }
        void pop() {
            if (top == -1) {
                cout << "underflow" << endl;
                return;
            }
            top--;
        }
        void display() {
            if (top == -1) {
                cout << "stack is empty" << endl;
                return;
            }
            for (int i = top; i >= 0; i--) {
                cout << stack[i] << " ";
            }
            cout << endl;
        }
};

int main() {
    int size;
    cin >> size;
    Stack stack(size);
    int choice, value;
    while (true) {
        cin >> choice;
        if (choice == 0) {
            break;
        }
        switch (choice) {
            case 1:
                cin >> value;
                stack.push(value);
                break;
            case 2:
                stack.pop();
                break;
            case 3:
                stack.display();
                break;
            default:
                cout << "Invalid choice" << endl;
                break;
        }
    }
    return 0;
}
